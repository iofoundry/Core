<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rdf:RDF [
	<!ENTITY ccoimport "http://www.ontologyrepository.com/CommonCoreOntologies/">
	<!ENTITY dc "http://purl.org/dc/elements/1.1/">
	<!ENTITY dcterms "http://purl.org/dc/terms/">
	<!ENTITY iof-av "https://www.industrialontologies.org/ontology/core/meta/AnnotationVocabulary/">
	<!ENTITY iof-core "https://www.industrialontologies.org/ontology/core/Core/">
	<!ENTITY owl "http://www.w3.org/2002/07/owl#">
	<!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#">
	<!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#">
	<!ENTITY roimport "http://purl.obolibrary.org/obo/">
	<!ENTITY skos "http://www.w3.org/2004/02/skos/core#">
	<!ENTITY xsd "http://www.w3.org/2001/XMLSchema#">
]>
<rdf:RDF xml:base="https://www.industrialontologies.org/ontology/core/Core/"
	xmlns:ccoimport="http://www.ontologyrepository.com/CommonCoreOntologies/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:dcterms="http://purl.org/dc/terms/"
	xmlns:iof-av="https://www.industrialontologies.org/ontology/core/meta/AnnotationVocabulary/"
	xmlns:iof-core="https://www.industrialontologies.org/ontology/core/Core/"
	xmlns:owl="http://www.w3.org/2002/07/owl#"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:roimport="http://purl.obolibrary.org/obo/"
	xmlns:skos="http://www.w3.org/2004/02/skos/core#"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
	
	<owl:Ontology rdf:about="https://www.industrialontologies.org/ontology/core/Core/">
		<rdfs:label xml:lang="en">Core Ontology</rdfs:label>
		<dcterms:abstract>The IOF Core Ontology contains terms and concepts found to be common across multiple domains of industry and represents an OWL implementation of them. The ontology itself utilizes the Basic Formal Ontology or BFO as a philosophical foundation but also imports terms from various domain-independent or &quot;mid-level&quot; ontologies. The purpose of the ontology is to serve or is intended to serve as a core for IOF&apos;s domain-specific ontologies, with a goal being to ensure consistency and interoperability across the suite of ontologies the IOF publishes.</dcterms:abstract>
		<dcterms:contributor xml:lang="en">Elisa Kendall, Thematix Partners LLC</dcterms:contributor>
		<dcterms:contributor xml:lang="en">Will Sobel, W. V. Sobel LLC</dcterms:contributor>
		<dcterms:creator xml:lang="en">Chris Will, ...</dcterms:creator>
		<dcterms:creator xml:lang="en">IOF Core Working Group</dcterms:creator>
		<dcterms:license rdf:datatype="&xsd;anyURI">https://creativecommons.org/licenses/by/4.0/</dcterms:license>
		<dcterms:publisher xml:lang="en">Industrial Ontology Foundry</dcterms:publisher>
		<dcterms:references rdf:resource="http://purl.org/dc/terms/"/>
		<dcterms:references rdf:resource="http://www.w3.org/2004/02/skos/core#"/>
		<dcterms:title>Industrial Ontology Foundry (IOF) Core Ontology</dcterms:title>
		<rdfs:seeAlso>https://docs.google.com/document/d/1gwrGTOjFc3xdnfUsMVNGOHwasUQUBpKXxwyrKlC5UBI/edit</rdfs:seeAlso>
		<owl:imports rdf:resource="http://purl.obolibrary.org/obo/"/>
		<owl:imports rdf:resource="&roimport;bfo.owl"/>
		<owl:imports rdf:resource="http://www.ontologyrepository.com/CommonCoreOntologies/"/>
		<owl:imports rdf:resource="https://www.industrialontologies.org/ontology/core/meta/AnnotationVocabulary/"/>
		<owl:versionInfo xml:lang="en">18 July 2021</owl:versionInfo>
		<skos:changeNote xml:lang="en">(1) revised the IRI structure to correspond to the approved approach to IRI representation documented in https://oagiscore.atlassian.net/wiki/spaces/IOF/pages/3564372109/IRI+Structure+and+Format, updated the ontology prefix to be &apos;iof-core&apos; rather than &apos;iof&apos; for better reusability, eliminated unused references in namespace declarations, and ran the RDF serialiser (from FIBO) over the content, (2) revised some x annotations to be editorial notes, per the annotation vocabulary (rather than adding a new annotation for issues and actions), (3) changed labels to lower case, consistent with ISO 704 recommendations, (4) eliminated smart quotes, (5) merged classes that were subclasses of Agent with subclasses of AgentRole, since they were all roles, (6) moved any concepts that are not in the draft refactored core diagram to CoreParked.</skos:changeNote>
		<iof-av:copyright xml:lang="en">Copyright (c) 2020-2021 Industrial Ontology Foundry</iof-av:copyright>
		<iof-av:copyright>Copyright (c) 2021 OAGi</iof-av:copyright>
	</owl:Ontology>
	
	<owl:Class rdf:about="&iof-core;Agent">
		<rdfs:subClassOf rdf:resource="&iof-core;MaterialEntity"/>
		<rdfs:label>agent</rdfs:label>
		<dcterms:source rdf:datatype="&xsd;anyURI">http://www.omg.org/techprocess/meetings/schedule/AMP.html</dcterms:source>
		<rdfs:seeAlso rdf:datatype="&xsd;anyURI">http://www.jamesodell.com/WhatIsAnAgent.pdf</rdfs:seeAlso>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:firstOrderLogicDefinition>Agent(x) ↔ (Person(x) ∨ Organization(x)) ∧ ∃y (AgentRole(y) ∧ RoleOf(y, x))</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>something or someone that can adapt to and interact with its environment</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;AgentRole">
		<rdfs:subClassOf rdf:resource="&iof-core;Role"/>
		<rdfs:label>agent role</rdfs:label>
		<skos:editorialNote>The IOF has elected to exclude material substances that may, at times, act like or are often referred to as agents, in that they realize some specific function that some person desires (e.g., platinum is a reducing agent in various reduction-type reactions -- as used in a catalytic converter to eliminate or reduce various pollutants in exhausts).

The IOF has at this time excluded other types of non-human agents, such as animals and other organisms (often referred to as biological agents).</skos:editorialNote>
		<skos:example>an employee; a transportation &amp; logistics provider; a robot; a scheduling system</skos:example>
		<iof-core:xExampleComplement>Other types of agents we are not including at this stage are: 
1. Those that are physical and chemical in nature: Cleaning, vulcanizing, fluxing, indicator, sterilizing, emulisifying, refining.

2. Organisms: animals, cells, parts of organisms (organs, organelles, viruses).

3. In computing: intelligent, artificial, mobile, &amp; autonomous</iof-core:xExampleComplement>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:explanatoryNote>From the dictionary:
1. A person who acts on behalf of another person or group.
2. A person or thing that takes an active role or produces a specified effect.
3. OBI: A role borne by an entity and that is realized in a process that is part of an investigation in which an objective is achieved. These processes include, among others: planning, overseeing, funding, reviewing.</iof-av:explanatoryNote>
		<iof-av:firstOrderLogicDefinition>AgentRole(x) ↔ Role(x) ∧ ∃m ∃n (materialentity(m) ∧ (Person(n) ∨ GroupOfPersons(n)) ∧ actsOnBehalfOf(m, n))</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>role that someone or something plays when he, she or it engages in some planned process on behalf of some other person or group of persons</iof-av:naturalLanguageDefinition>
		<iof-av:semi-formalNaturalLanguageDefinition>Role a Material Entity has when it &apos;participates in&apos; some Planned Process in which it acts On Behalf Of some other Person or Group of Persons</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;AssemblyLineProcess">
		<rdfs:subClassOf rdf:resource="&iof-core;zParkedClasses"/>
		<rdfs:label xml:lang="en">assembly line process</rdfs:label>
		<skos:editorialNote>1. This term traces back to Top-20 term Assembly Process, and Neil&apos;s proposed Option #2. Option #2 is what is commonly called an Assembly Line Process.</skos:editorialNote>
		<skos:example>automotive final assembly; assemble-to-order process of laptop computers (that begins only after an order is confirmed &amp; in which the customer selects a desired standard product configuration or from a set of pre-defined configurations)</skos:example>
		<iof-core:xDefinitionOtherCommon>1. [An assembly line process is] a manufacturing process in which parts are added as the semi-finished assembly moves from workstation to workstation, where the parts are added in sequence until the final assembly is produced [Wikipedia].

2. An assembly line [is a manufacturing process] in which equipment and work centers are laid out to follow the sequence in which raw materials and parts are assembled [APICS].</iof-core:xDefinitionOtherCommon>
		<iof-av:naturalLanguageDefinition>assembly line process is a manufacturing process in which the collection of manufacturing operations that comprise it, are arranged in sequential fashion in the order in which the parts are added to the assembly.</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Capability">
		<rdfs:subClassOf rdf:resource="&roimport;BFO_0000016"/>
		<rdfs:label xml:lang="en">capability</rdfs:label>
		<rdfs:comment>1. Whereas the BFO term &apos;disposition refers to all tendencies, powers, habits, skills, potentials, and so forth, that a material entity may possess, a Capability narrows this down by requiring the existence of an Agent that has an interest in the capability, and requires a capability to be gradable according to some scale or system of reference. 

2. This definition does not attempt to capture &quot;task-based&quot; capabilities that an entity may bear -- e.g., a stone&apos;s capability to kill when used by some person. Rather, it captures &quot;proper capabilities.&quot; See related discussion of &quot;proper functions&quot; in the literature. 

3. Not all capabilities are functions. Capabilities are often added to an artifact by the designer/engineer, or to a biological entity through evolution, as &quot;additional benefits,&quot; and are differentiated from function (i.e., purpose). Examples: the air conditioner in your car is a capability but not the function of your car. Yet the function of the car air conditioner certainly forms some material basis of your car&apos;s ability to provide a comfortable experience. The ability of your heart to beat fast to support your need to run fast to escape a threat. The decaying stick on the forest lawn does not have the function to be used as a tool, but certainly a chimpanzee
 may have an interest in using a stick to extract food from a termite mound.</rdfs:comment>
		<skos:example xml:lang="en">Capability of a person to play chess at the &quot;master&quot; level; of a team to play football in the professional league; of a lathe to turn at 4,000 RPM; or of your digestive system to digest tiramisu.</skos:example>
		<iof-core:xDefinitionOtherCommon>From Oxford Languages: Capability is
(1) the power or ability to do something, and
(2) the extent of someone&apos;s or something&apos;s ability.</iof-core:xDefinitionOtherCommon>
		<iof-core:xExampleComplement>Any capability that is not gradable against a reference system or for which one does not yet exist, is not a capability: the capability of a stick on the forest lawn to be used as a tool by an animal to extract food from a termite mound. The ability of certain bacterium to convert carbon dioxide into fuel in a single enzymatic step, is not a capability until such time that a group of researchers discovers this (and quantifies this ability).</iof-core:xExampleComplement>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:elucidation>disposition&apos; in whose realization some Agent has an interest and for all times during which the capability inheres in its bearer, it is gradable according to some scale or system of reference</iof-av:elucidation>
		<iof-av:excerptedFrom>CCO for term by the same name.</iof-av:excerptedFrom>
		<iof-av:naturalLanguageDefinition xml:lang="en">the extent of someone or something&apos;s ability to bring about processes of a certain kind</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Component">
		<rdfs:subClassOf rdf:resource="&iof-core;Entity"/>
		<rdfs:label xml:lang="en">component</rdfs:label>
		<skos:altLabel>part, item</skos:altLabel>
		<skos:example>portion of water; portion of crude oil; sea shells; bolt; transmission assembly; engine control software</skos:example>
		<iof-core:xDefinitionOtherCommon>1. A raw material, part, or subassembly that goes into a higher level assembly, compound, or the final product. This term may also include packaging materials for finished items [APICS].

2. An individual piece used in the assembly of a single unit of equipment [ISO 13533:2001]</iof-core:xDefinitionOtherCommon>
		<iof-core:xExampleComplement>Assemblies that are components for one manufacturer and final products for another (e.g., the selling of diesel engines is a primary product line of Cummins diesel engine yet a component assembly for its customers, Freightliner Trucks). The context in which a material entity is used needs to be ideally considered in inferring whether it bears the component role.</iof-core:xExampleComplement>
		<iof-core:xExampleCounter>Braking subsystem -- systems and subsystems are object aggregates and often have fiat boundaries, in which case they may be incorrectly inferred as product components. Othertimes, they are systems with bonafide boundaries and should be inferred as a product component. 

Software Components -- sometimes they are components of a product, other times they are fiat subsystems of a software system and not to be inferred as product components.</iof-core:xExampleCounter>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:firstOrderLogicDefinition>Component(x) ↔ MaterialEntity(x) ∧∃r (ComponentRole(r) ∧ hasRole(x, r))</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>a raw material or other intermediate-level processed material, or a part or subassembly, that is intended to become part of a higher-level processed material, part, or assembly, or the final product</iof-av:naturalLanguageDefinition>
		<iof-av:semi-formalNaturalLanguageDefinition>Component is a Material Entity when it has a Component Role</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Design">
		<rdfs:subClassOf rdf:resource="&iof-core;InformationEntity"/>
		<rdfs:label xml:lang="en">design</rdfs:label>
		<skos:example>a recipe and procedure with nice pictures for baking a cake at home; the design of a software program to reschedule the open and in-progress work orders in my factory based on changing conditions</skos:example>
		<iof-core:xDefinitionOtherCommon>1. [Wikipedia]: A design is a plan or specification for the construction of an object or system or for the implementation of an activity or process, or the result of that plan or specification in the form of a prototype, product or process. 

Note: The requirements for products and in some cases associated processes can be contained in, for example, technical specifications, product standards, process standards, contractual agreements and regulatory requirements.

2. [ISO 14813-5]: How parts or constituents are related to an organised whole, providing specification for the structure, organization, appearance, etc., of a system or entity.</iof-core:xDefinitionOtherCommon>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:firstOrderLogicDefinition>Design(​x)​ ↔ DirectiveInformationContentEntity(​x​) &amp;​∃​x1​,​ ​x2​,​ ...,​x​n &amp; ∀​ x​i(​requirement(​xi​ )​ &amp; part-of(​x​i,​ ​x)​)</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>detailed description or model of something man-made that satisfies a set of requirements</iof-av:naturalLanguageDefinition>
		<iof-av:relationToBasicFormalOntologyElement></iof-av:relationToBasicFormalOntologyElement>
		<iof-av:semi-formalNaturalLanguageDefinition>Design is a Directive Information Content Entity that prescribes some thing and satisfies a set of requirements.</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;EngineeredSystem">
		<rdfs:subClassOf rdf:resource="&iof-core;System"/>
		<rdfs:label xml:lang="en">engineered system</rdfs:label>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:naturalLanguageDefinition>To be brought in from Systems Engineering WG</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Entity">
		<rdfs:label>entity</rdfs:label>
		<iof-av:naturalLanguageDefinition>something that exists, has existed, or may exist</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Feature">
		<rdfs:subClassOf rdf:resource="&iof-core;zParkedClasses"/>
		<rdfs:label xml:lang="en">feature</rdfs:label>
		<rdfs:comment>&quot;Feature&quot; (like &quot;characteristic&quot;) is an umbrella term including in its coverage domain: qualities, parts of a material product (for example, chromium plating), a hole within a material product (for example, a button hole), as well as information entities, as well as metalevel characteristics such as availability, reliability, average dimensions, as well as characteristics of processes such as rate, continuity, and so forth</rdfs:comment>
		<skos:editorialNote>Deprecated until we have time to thoroughly analyze the notion of feature in general, the different kinds of features applicable to industry, and have agreement on how to incorporate into the ontology. As it stands right now, PPS working group may surface the notion of &quot;manufacturing feature&quot; in their ontology, and we&apos;ll see if there is any overlap with other or future domain ontologies the IOF may consider.</skos:editorialNote>
		<iof-av:naturalLanguageDefinition xml:lang="en">characteristic of a material artifact or process</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;FeatureDescription">
		<rdfs:subClassOf rdf:resource="&iof-core;zParkedClasses"/>
		<rdfs:label xml:lang="en">feature description</rdfs:label>
		<skos:editorialNote>See comment under Feature.</skos:editorialNote>
		<skos:example>1. In a CAD file or equivalent, walls, holes, extrusions, embossing.
2. Part dimensions and associated tolerances
3. Material qualities
4. Performance criteria (miles per gallong, pumping rate, maximum stress/load).</skos:example>
		<iof-core:xExampleComplement>1. Desired features of a manufacturing process plan (e.g., action specification on how to achieve the desired operating temperature of the process).
2. External or environmental operating features as in the operating temperature range of a product.</iof-core:xExampleComplement>
		<iof-core:xExampleCounter>&quot;Soft&quot; criteria such as usability, aesthetics, etc., that cannot be measured nor have they a physical referent.</iof-core:xExampleCounter>
		<iof-av:naturalLanguageDefinition xml:lang="en">descriptive information content entity that describes some characteristic of a material artifact or process</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;GroupOfAgents">
		<rdfs:subClassOf rdf:resource="&roimport;BFO_0000027"/>
		<rdfs:label>group of agents</rdfs:label>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:excerptedFrom>http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AgentOntology</iof-av:excerptedFrom>
		<iof-av:naturalLanguageDefinition>group that consists of two or more persons, organizations or machines, or any combination of these, that interact together to realize some function</iof-av:naturalLanguageDefinition>
		<iof-av:semi-formalNaturalLanguageDefinition>Group of Agents is an Object Aggregate that has only Agents as parts.</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;InformationEntity">
		<rdfs:subClassOf rdf:resource="&iof-core;Entity"/>
		<rdfs:label>information entity</rdfs:label>
		<iof-av:naturalLanguageDefinition>something that consists of knowledge about something, including that obtained from analysis, instruction, investigation, study, and other processes</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Intention">
		<rdfs:subClassOf rdf:resource="&roimport;BFO_0000016"/>
		<rdfs:label xml:lang="en">intention</rdfs:label>
		<rdfs:comment>1. If the agent of an intention is an organization (for example a business entity, a department, a team), then the organizational agent&apos;s intention will be the collective plans (some of which may be shared &amp; others not or at the individual level) of the corresponding person or members of the organization realizing the intention. Where persons of different levels of authority are involved, the subplans will be correspondingly nested. ​FIND LITERATURE ON THIS.
			 
2. Without intentions, planned processes would never materialize (be concretized). 

3. A plan specification may be a formal document, inferred on-the-fly using experience and intuition by a person (the one bearing the intention to be realized) from what is written down (as in an e-mail from his manager), or it may exist as a spoken command that is communicated to the person(s) required to realize it. (See also term planned process.)</rdfs:comment>
		<skos:editorialNote>The definition probably needs to be expanded to include &quot;partial&quot; achievement of a plan specification</skos:editorialNote>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:adaptedFrom>1. Bratman, Michael. (1987). &quot;Intention, Plans and Practical Reason,&quot; Cambridge, MA: Harvard University Press, 28-30.

2. Ajzen I, Kruglanski A.W. (2019). &quot;Reasoned Action in the Service of Goal Pursuit,&quot; Psychological Review, Vo. 126, No. 5, 774-786</iof-av:adaptedFrom>
		<iof-av:elucidation>Intention is a &apos;disposition&apos;&apos; an Agent or Group of Human Agents &apos;bears&apos; when it &apos;concretizes&apos; some Plan Specification, which if &apos;realized,&apos; is &apos;realized in&apos; a Planned Process in which the Agent &apos;participates in&apos; and that &apos;achieves&apos; the Planned Process.</iof-av:elucidation>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;ManufacturedSystem">
		<rdfs:subClassOf rdf:resource="&iof-core;EngineeredSystem"/>
		<rdfs:label xml:lang="en">manufactured system</rdfs:label>
		<rdfs:comment>a manufactured system is not a manufactured product, since all manufactured products are objects and all systems are object aggregates.</rdfs:comment>
		<skos:editorialNote>Not sure we need this term and if we do, it needs some work. Not sure what Niel is trying to say in his comment either.</skos:editorialNote>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:naturalLanguageDefinition>system that is the specified output of a manufacturing process</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;ManufacturingResource">
		<rdfs:subClassOf rdf:resource="&iof-core;zParkedClasses"/>
		<rdfs:label xml:lang="en">manufacturing resource</rdfs:label>
		<skos:editorialNote>We agreed in our 18-Feb-2020 meeting to remove functional subclasses of Resource from the IOF core ontology, and let the various working group create functional defined classes of resource, if they wish, for their domains. We propose to move this term to the PPS ontology and have that working group decide. Manufacturing Resource was a top-20 term and surfaces all the time in manufacturing process design, enterprise resource planning and manufacturing operations management contexts.</skos:editorialNote>
		<skos:example>1. A computer numerically controlled (CNC) milling machine from Mazak, serial number SN1, installed in building B1, in machining center MC2, and placed into service late last year, which we use to machine engine blocks for the V6 powertrains.

2. Some 5-axis computer numerically controlled milling machine from one of the  existing vendors we do business with, which we do not yet own, and which we wish to acquire, install and place into service to meet next year&apos;s forcasted increase in demand,  which moreover, satisfies the numerous functional and other requirements we have for flexible manufacturing of both our V6 and V8 powertrain types in the same machining center.</skos:example>
		<iof-core:xDefinitionOtherCommon>Manufacturing Resource (industry definitions):
1. Anything that adds value to a good or service in its creation, production, or delivery [APICS].
2. ISO 18435-1:2009(en): a physical or logical entity that enables a manufacturing process.</iof-core:xDefinitionOtherCommon>
		<iof-core:xExampleComplement>(Arguable) complement examples: Tools, fixtures, conveyors, robot grippers, programmable logic controllers, sensors/devices and actuators and other fixed or moving pieces of equipment. If such material entities have, or are intended to bear, a causative role (in a maximal sense) in realizing some manufacturing process role, then they can and will be inferred as being manufacturing resources. See Manufacturing Resource Role for more explanation.</iof-core:xExampleComplement>
		<iof-av:firstOrderLogicDefinition>instance-of(​x,​ manufacturing resource, ​t​) ↔ ​∃​y(manufacturing resource role(​y)​ &amp; has-role(​x,​ ​y​, ​t)​ )</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>(defined class): a resource that bears the manufacturing resource role.</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;ManufacturingStepSpecification">
		<rdfs:subClassOf rdf:resource="&iof-core;zParkedClasses"/>
		<rdfs:label xml:lang="en">manufacturing step specification</rdfs:label>
		<owl:versionInfo rdf:datatype="&xsd;decimal">0.8</owl:versionInfo>
		<skos:editorialNote>This NL definition captures the desired intent for the term but formalization will be a bit of effort. Recommend holding off on that until the proposed definition for term Action Specification is stable and formalized (in particular the embedded relation prescribes-agents-role-in).</skos:editorialNote>
		<iof-av:naturalLanguageDefinition>informational artifact that forms part of some manufacturing operation specification, and prescribes a set of actions to be performed together by some worker, or by a group of workers acting together in a coordinated manner, so as to successfully realize part of a manufactuirng operation</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;MaterialEntity">
		<rdfs:subClassOf rdf:resource="&iof-core;Entity"/>
		<rdfs:label>material entity</rdfs:label>
		<iof-av:naturalLanguageDefinition>something that occupies space, has mass, and is composed of matter</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;MaterialHandlingResource">
		<rdfs:subClassOf rdf:resource="&iof-core;zParkedClasses"/>
		<rdfs:label>material handling resource</rdfs:label>
		<skos:example>A forklift used to transport heavier components and materials to or from anywhere within a factory, or between production facilities or to/from adjacent external areas belonging to the campus.</skos:example>
		<iof-av:naturalLanguageDefinition>(defined class) resource that bears the material handling resource role</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;MeasuredProductQuality">
		<rdfs:label xml:lang="en">measured product quality</rdfs:label>
		<owl:deprecated rdf:datatype="&xsd;boolean">true</owl:deprecated>
		<skos:editorialNote>The recommendation is to drop this term because (a) &apos;Measured Product Quality&apos; is not a &apos;quality&apos; in the sense of a Foundational ontology. &apos;quality&apos; in sense of a Foundational ontology is an entity we can perceive or measure: shapes, colors, sizes, sounds, smells, as well as weights, lengths, electrical charges. And these aspects are already captured in the definition for term quality. (b) What&apos;s the value in creating a subclass of quality for measurable qualities? Every quality perceived by mankind can be theoretically measured qualitatively or quantitatively, if we put our minds to it. 

Now if the intent was to capture some of the other aspects from ISO&apos;s definition, then perhaps we can open the debate again on the notion of feature vs quality in general, or between distinquishing features and other features, or between qualities that are inherent vs assigned, or those that are qualitative or quantitative, or those that are sensory vs behavioral, vs temporal, vs ergonomic;-)</skos:editorialNote>
		<iof-core:xDefinitionOtherCommon>Distinguishing feature. :
ISO 9000:2016] A characteristic is a distinguishing feature.
Note 1 to entry: A characteristic can be inherent or assigned.
Note 2 to entry: A characteristic can be qualitative or quantitative.
Note 3 to entry: There are various classes of characteristic, such as the following: a) physical (e.g. mechanical, electrical, chemical or biological characteristics); b) sensory (e.g. related to smell, touch, taste, sight, hearing); c) behavioural (e.g. courtesy, honesty, veracity); d) temporal (e.g. punctuality, reliability, availability, continuity); e) ergonomic (e.g. physiological characteristic, or related to human safety); f) functional (e.g. maximum speed of an aircraft).</iof-core:xDefinitionOtherCommon>
		<iof-av:firstOrderLogicDefinition>measured-product-quality(​x)​ ↔ specifically-dependent-continuant(​x)​ &amp; ​∃​y(​ product(​y​) &amp; inheres-in(​x​, ​y​)) &amp; ​∃​z(measurement-result(​z)​ &amp; is-measured-by(​x​, ​z)​ )</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>def. specifically dependent continuant that inheres in some product and is measured by some measurement information content entity.</iof-av:naturalLanguageDefinition>
		<iof-av:synonym xml:lang="en">product quality</iof-av:synonym>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;MechanicalSystem">
		<rdfs:subClassOf rdf:resource="&iof-core;EngineeredSystem"/>
		<rdfs:label xml:lang="en">mechanical system</rdfs:label>
		<skos:editorialNote>We are not specifying yet what sort of function a mechanical system bears. Perhaps we should introduce class &quot;mechanical function&quot; or &quot;material creation/elimination function,&quot; and other functions that mechanical systems possess, different from otherl types of engineered systems (information systems, structural systems, etc.)</skos:editorialNote>
		<iof-core:xDefinitionOtherCommon>A machine that also includes computers and sensors that monitor performance and plan movement [Wikipedia].</iof-core:xDefinitionOtherCommon>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:naturalLanguageDefinition>engineered system that realizes its function through the use of power to apply forces</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Object">
		<rdfs:subClassOf rdf:resource="&iof-core;MaterialEntity"/>
		<rdfs:label>object</rdfs:label>
		<iof-av:naturalLanguageDefinition>material entity that manifests causal unity and whose instances are maximal relative to the kind of causal unity manifested</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Objective">
		<rdfs:subClassOf rdf:resource="&iof-core;InformationEntity"/>
		<rdfs:label xml:lang="en">objective</rdfs:label>
		<skos:definition xml:lang="en">detailed description of one or more short-term, quantitative, measurable results that a party seeks to attain in order to achieve its goals, including but not limited to the intended outcomes of some process</skos:definition>
		<skos:example xml:lang="en">The objective specification in a manufacturer&apos;s six-sigma process improvement program will describe in some detail, the quality improvements to be achieved (as in e.g. the level of reduction in causes of defects, or in the level variability in either or both manufacturing and business processes).</skos:example>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:excerptedFrom xml:lang="en">http://www.obofoundry.org/ontology/iao.html</iof-av:excerptedFrom>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Organization">
		<rdfs:subClassOf rdf:resource="&iof-core;Agent"/>
		<rdfs:label xml:lang="en">organization</rdfs:label>
		<rdfs:comment>Members of organizations are either Organizations themselves or individual Persons. Members can bear specific Organization Member Roles that are determined in the organization rules. The organization rules also determine how decisions are made on behalf of the Organization by the organization members.</rdfs:comment>
		<dcterms:source>https://spec.edmcouncil.org/fibo/ontology/FND/Organizations/Organizations/</dcterms:source>
		<iof-core:xDefinitionOtherCommon>1. An organized body of people with a particular purpose, especially a business, society, association, etc. [Oxford Languages]</iof-core:xDefinitionOtherCommon>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:adaptedFrom>http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AgentOntology</iof-av:adaptedFrom>
		<iof-av:adaptedFrom>https://www.iso.org/obp/ui/#iso:std:iso-iec:6523:-1:ed-1:v1:en</iof-av:adaptedFrom>
		<iof-av:adaptedFrom>https://www.w3.org/TR/vocab-org/#class-organization</iof-av:adaptedFrom>
		<iof-av:firstOrderLogicDefinition>Organization(x)  ↔ GroupOfAgents(x) ∧ ∃f ∃i (function(f) ∧ DirectiveInformationContentEntity(i) ∧ hasFunction(x, f) ∧ prescribes(i, f))</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>collection of one or more people, or groups of people formed together into a community or other social, commercial or political structure to act, or that is designated to act, towards some purpose, such as to meet a need or pursue collective goals on a continuing basis</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Person">
		<rdfs:subClassOf rdf:resource="&iof-core;Agent"/>
		<rdfs:subClassOf rdf:resource="&iof-core;Object"/>
		<rdfs:label>person</rdfs:label>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:elucidation>Person is an organism and is &apos;member of at all times&apos; the species of homo sapiens</iof-av:elucidation>
		<iof-av:excerptedFrom>https://en.wikipedia.org/wiki/Human,
http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AgentOntology</iof-av:excerptedFrom>
		<iof-av:naturalLanguageDefinition>member of the species Homo sapiens</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Plan">
		<rdfs:subClassOf rdf:resource="&iof-core;InformationEntity"/>
		<rdfs:label xml:lang="en">plan</rdfs:label>
		<skos:example>a manufacturer&apos;s sales plan for this quarter</skos:example>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:directSource>Oxford Languages</iof-av:directSource>
		<iof-av:naturalLanguageDefinition>detailed description for doing or realizing something</iof-av:naturalLanguageDefinition>
		<iof-av:semi-formalNaturalLanguageDefinition>Plan is a Directive Information Content Entity that &apos;has member part of at all times&apos;, some Action Specification and some Objective Specification, and that prescribes some entity (i.e., some independent continuant that is not a spatial region, or some realizable entity an independent continuant bears intended to be realized, or some process that outputs these).</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Process">
		<rdfs:subClassOf rdf:resource="&iof-core;Entity"/>
		<rdfs:label xml:lang="en">process</rdfs:label>
		<rdfs:comment>1. &apos;Planned&apos; is here functioning as a specifier, rather than as a modifier analogous to &apos;cancelled&apos; or &apos;averted&apos;. Therefore, to say that a process is planned is not to say that it has not yet taken place. Rather, it is to say that it is (was or will have been) protocol-driven, instruction-driven, command-driven, or software-driven, or in some combination thereof, as prescribed by one or more directive information content entities. 
				  
2. A planned process remains a planned process even after it has occurred. Hence, the contrast is with accidental processes or with processes that did not turn out as planned (for example because a drill bit broke while realizing a planned drilling process), or with incidental processes not part of the realization of a plan (such as the lathe operator smoking a cigarette while operating her lathe).
				  
3. &apos;Planned&apos; means &apos;protocol driven&apos;. Protocols may be written, spoken, or simply thought – as when upon waking up, we plan, for instance, what to eat for breakfast.</rdfs:comment>
		<skos:editorialNote xml:lang="en">Note we have removed Agent from our previous definition. See the discussion and proposed revisions for term Agent and relation &apos;agent In&apos;. Many planned processes will not have as participants, a person, an organization or an engineered system.

Also, I don&apos;t think any of these are urgent, but here are some thoughts:
1. We probably should figure out a way to include some of the complement examples.

3. Does partial achievement, intended or not, need to be factored in?</skos:editorialNote>
		<skos:example xml:lang="en">A tire manufacturing process realized as prescribed by a manufacturing process specification.</skos:example>
		<iof-core:xDefinitionOtherCommon>Process that is documented by both a description and a plan. Note 1 to entry: The related process description and plan are coordinated, and the plan can include standards, requirements, objectives, resources, and assignments.
 [ISO/IEC/IEEE 24765]</iof-core:xDefinitionOtherCommon>
		<iof-core:xExampleComplement>unexpected failure events; unexpected malfunctioning of a machine; safety occurrence (that lacks explicit plan specifications); performing an assembly, material handling, or other regular action for which the work instructions lack sufficient detail.</iof-core:xExampleComplement>
		<iof-core:xExampleCounter>Smoking a cigarette in compliance with local laws and if they exist, an organization&apos;s more restrictive rules. 

More generally, any action where the causitive agent intends to adhere to laws and rules, may be improperly inferred as a planned process.</iof-core:xExampleCounter>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:firstOrderLogicDefinition>PlannedProcess(p) ↔ process(p) ∧ ∃s (PlanSpecification(s) ∧ prescribes(s, p) ∧ achieves(p, s))</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>process that is prescribed by a plan that the process achieves</iof-av:naturalLanguageDefinition>
		<iof-av:semi-formalNaturalLanguageDefinition>Planned Process is a process that is &apos;prescribed by&apos; some Plan Specification which the process &apos;achieves&apos;.</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;ProcessProfile">
		<rdfs:subClassOf rdf:resource="&roimport;BFO_0000003"/>
		<rdfs:label xml:lang="en">process profile</rdfs:label>
		<skos:editorialNote>This term was brought in from BFO 2.0 as it has been removed from the latest version of BFO, and we feel we need it to model &quot;process qualities&quot; for the industrial domains. To proceed, we probably need to write up a natural language definition that subject matter experts might come close to understanding.</skos:editorialNote>
		<skos:example>1. On a somewhat higher level of complexity are what we shall call rate process profiles, which are the targets of selective abstraction focused not on determinate quality magnitudes plotted over time, but rather on certain ratios between these magnitudes and elapsed times. A speed process profile, for example, is represented by a graph plotting against time the ratio of distance covered per unit of time. Since rates may change, and since such changes, too, may have rates of change, we have to deal here with a hierarchy of process profile universals at successive levels

2. One important sub-family of rate process profiles is illustrated by the beat or frequency profiles of cyclical processes, illustrated by the 60 beats per minute beating process of John&apos;s heart, or the 120 beats per minute drumming process involved in one of John&apos;s performances in a rock band, and so on. Each such process includes what we shall call a beat process profile instance as part, a subtype of rate process profile in which the salient ratio is not distance covered but rather number of beat cycles per unit of time. Each beat process profile instance instantiates the determinable universal beat process profile. But it also instantiates multiple more specialized universals at lower levels of generality, selected from   rate process profilebeat process profileregular beat process profile3 bpm beat process profile4 bpm beat process profileirregular beat process profileincreasing beat process profileand so on.In the case of a regular beat process profile, a rate can be assigned in the simplest possible fashion by dividing the number of cycles by the length of the temporal region occupied by the beating process profile as a whole. Irregular process profiles of this sort, for example as identified in the clinic, or in the readings on an aircraft instrument panel, are often of diagnostic significance.

3. The simplest type of process profiles are what we shall call &apos;quality process profiles&apos;, which are the process profiles which serve as the foci of the sort of selective abstraction that is involved when measurements are made of changes in single qualities, as illustrated, for example, by process profiles of mass, temperature, aortic pressure, and so on.</skos:example>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:firstOrderLogicDefinition>ProcessProfile(a) ↔ occurrent(a) ∧ ∃b (process(b) ∧ processProfileOf(a, b)</iof-av:firstOrderLogicDefinition>
		<iof-av:semi-formalNaturalLanguageDefinition>Process Profile is a is an &apos;occurrent&apos; and there exists some &apos;process&apos; c such that the relation b &apos;process Profile Of&apos; c holds.</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;QualitySpecification">
		<rdfs:subClassOf rdf:resource="&iof-core;zParkedClasses"/>
		<rdfs:subClassOf>
			<owl:Restriction>
				<owl:onProperty rdf:resource="&ccoimport;prescribes"/>
				<owl:someValuesFrom rdf:resource="&roimport;BFO_0000019"/>
			</owl:Restriction>
		</rdfs:subClassOf>
		<rdfs:label xml:lang="en">quality specification</rdfs:label>
		<skos:editorialNote>1. Moved this under Directive ICE vs being subclass of Specification. Expanded definition to link it to instances of a particular universal type of material entity.
2. Why just limit the scope of this to the obo: Quality of a Material Entity? Look at the wider scope for this under the ISO 9000 definition for characteristic and quality characteristic.
3. Needs to be related to other terms that surface in product/process design and the configuration management space.</skos:editorialNote>
		<iof-core:xDefinitionOtherCommon>(1) [[ISO 9000:2016] Characteristic [Specification] -- [a specification that describes] a distinguishing feature. 
Note 1 to entry: A characteristic can be inherent or assigned.
Note 2 to entry: A characteristic can be qualitative or quantitative.
Note 3 to entry: There are various classes of characteristic, such as the following: a) physical (e.g. mechanical, electrical, chemical or biological characteristics); b) sensory (e.g. related to smell, touch, taste, sight, hearing); c) behavioural (e.g. courtesy, honesty, veracity); d) temporal (e.g. punctuality, reliability, availability, continuity); e) ergonomic (e.g. physiological characteristic, or related to human safety); f) functional (e.g. maximum speed of an aircraft).

(2)  [[ISO 9000:2016] Quality Characteristic [Specification] -- [a specification that describes] an inherent characteristic of an object related to a requirement.
Note 1 to entry: Inherent means existing in something, especially as a permanent characteristic.
Note 2 to entry: A characteristic assigned to an object (e.g. the price of an object) is not a quality characteristic of that object.</iof-core:xDefinitionOtherCommon>
		<iof-core:xMaturity>Stable Definition</iof-core:xMaturity>
		<iof-av:firstOrderLogicDefinition>Option A (from Todd Discussion):

QualitySpecification(x) ↔ DirectiveInformationContentEntity(x) ∧ ∃M, ∃Q (MaterialEntity(M) ∧ Quality(Q) ∧ ∀m ∃q (instance-of(m, M) ∧ instance-of(q, Q) → (prescribes(x, q) ∧ prescribes(x, m) ∧ inheresIn(q, m)))))

Option B (upon further reflection):

QualitySpecification(x) ↔ DirectiveInformationContentEntity(x) ∧ ∃Q (Quality(Q) ∧ prescribes(x, Q) ∧∃M (MaterialEntity(M) ∧∀m (instance-of(m, M) → ∃q (hasQuality(m, q) ∧ instance-of(q, Q)))))</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>a detailed description of some inherent characteristic that instances of a particular kind of thing must have</iof-av:naturalLanguageDefinition>
		<iof-av:semi-formalNaturalLanguageDefinition>Quality Specification is a Directive Information Content Entity that &apos;prescribes&apos; some &apos;quality&apos; that instances of particular kind of &apos;material entity&apos; must bear.</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Requirement">
		<rdfs:subClassOf rdf:resource="&iof-core;InformationEntity"/>
		<rdfs:label xml:lang="en">requirement</rdfs:label>
		<skos:editorialNote>This term and the candidate definition was introduced since the term is embedded in some of the other top-20 terms. It is still in review by the working group along with the related term specification. The definition above has been brought in from the Reified Requirements Ontology (RRO) as a starting point.

We probably need to introduce the related term, Requirements Specification Document, and we might need to analyze some use cases dealing with requiirements management in engineering and systems design to do so.</skos:editorialNote>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:adaptedFrom>https://demo-irm-dnvgl.northeurope.cloudapp.azure.com/ontology/requirement-ontology/core/A01A</iof-av:adaptedFrom>
		<iof-av:naturalLanguageDefinition>statement about some thing that satisfies a stakeholder need and contains exactly one scope, condition, and demand clause as part.</iof-av:naturalLanguageDefinition>
		<iof-av:semi-formalNaturalLanguageDefinition>Requirement is a Directive Information Content entity that contains a exactly one Scope, Condition, Demand (SCD) clause as part, and prescribes some entity (continuant or occurrent).</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Role">
		<rdfs:subClassOf rdf:resource="&iof-core;Entity"/>
		<rdfs:label>role</rdfs:label>
		<dcterms:source rdf:datatype="&xsd;anyURI">https://spec.edmcouncil.org/fibo/ontology/FND/Parties/Roles/</dcterms:source>
		<iof-av:naturalLanguageDefinition>relative concept that ties something to a part it plays in a given situational context, representing some set of connected behaviors, rights, obligations, beliefs, and/or norms relevant to that context</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Specification">
		<rdfs:label xml:lang="en">specification</rdfs:label>
		<owl:deprecated rdf:datatype="&xsd;boolean">true</owl:deprecated>
		<skos:editorialNote>This adds no value beyond what we already have imported from CCO in terms of Descriptive or Directive ICEs.</skos:editorialNote>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:elucidation>A directive information content entity that prescribes some part or feature of an independent continuant or a process.</iof-av:elucidation>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;Step">
		<rdfs:subClassOf rdf:resource="&iof-core;zParkedClasses"/>
		<rdfs:label xml:lang="en">manufacturing operation step</rdfs:label>
		<skos:editorialNote>The approach to formalizing this is to analyze it in the context of some discrete manufacturing use cases in which work instructions play a role), and then to formalize it and related terms. It will only be reintroduced into IOF Core when the term surfaces in other domains.</skos:editorialNote>
		<iof-core:xMaturity>Pre-analysis</iof-core:xMaturity>
		<iof-av:naturalLanguageDefinition>a task performed by a person or a group of persons that is part of some manufacturing operation and is not decomposed further (in the context of the person or group of persons performing it), and is prescribed by some work instructions</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:Class rdf:about="&iof-core;System">
		<rdfs:subClassOf rdf:resource="&roimport;BFO_0000027"/>
		<rdfs:label xml:lang="en">system</rdfs:label>
		<skos:example>solar system, digestive system, forest ecosystem, hydraulic system, subway system.</skos:example>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:adaptedFrom>Oxford Languages: &quot;A set of things working together as parts of a mechanism or an interconnecting network.&quot;</iof-av:adaptedFrom>
		<iof-av:naturalLanguageDefinition>To be brought in from Systems Engineering WG</iof-av:naturalLanguageDefinition>
	</owl:Class>
	
	<owl:ObjectProperty rdf:about="&iof-core;achieves">
		<rdfs:subPropertyOf rdf:resource="&roimport;BFO_0000059"/>
		<rdfs:label xml:lang="en">achieves</rdfs:label>
		<dcterms:title>The staffing and ramping up of production to 2 shifts per work day acheives the company plan of satisfying a surge in demand for its products.</dcterms:title>
		<rdfs:domain rdf:resource="&iof-core;Process"/>
		<rdfs:range rdf:resource="&ccoimport;DirectiveInformationContentEntity"/>
		<skos:editorialNote>1. Do we need an inverse for this? 
2. We need to formalize the part about achieving a part of some plan, but not necessarily the whole plan?
3. Do we need a relation that relates the modal form of the thing the plan prescribes in the future (i.e., entities that may not exist as yet that the plan prescribes), to the entities that come into existence as the process unfolds?</skos:editorialNote>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:firstOrderLogicDefinition>achieves(p,o) → PlannedProcess(p) ∧ DirectiveInformationContentEntity(o) ∧ concretizes-at-some-time(p,o))</iof-av:firstOrderLogicDefinition>
		<iof-av:naturalLanguageDefinition>a relation between a planned process and some plan that holds when a process prescribed by some plan concretizes the plan or a part of the plan, at some time as the process unfolds</iof-av:naturalLanguageDefinition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&iof-core;actsOnBehalfOf">
		<rdfs:label>acts on behalf of</rdfs:label>
		<rdfs:domain rdf:resource="&roimport;BFO_0000040"/>
		<rdfs:range>
			<owl:Class>
				<owl:unionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&iof-core;Organization">
					</rdf:Description>
					<rdf:Description rdf:about="&iof-core;Person">
					</rdf:Description>
				</owl:unionOf>
			</owl:Class>
		</rdfs:range>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:elucidation>x &apos;acts On Behalf Of&apos; y holds when x is a material entity and y is some Person or Group of Persons (x and y are not the same) and at some time t, there exists a Planned Process p such that x &apos;participates in&apos; p and y &apos;has interest in&apos; p</iof-av:elucidation>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&iof-core;hasAnInterestIn">
		<rdfs:label>has an interest in</rdfs:label>
		<rdfs:domain>
			<owl:Class>
				<owl:unionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&iof-core;Agent">
					</rdf:Description>
					<rdf:Description rdf:about="&iof-core;GroupOfAgents">
					</rdf:Description>
				</owl:unionOf>
			</owl:Class>
		</rdfs:domain>
		<rdfs:range rdf:resource="&roimport;BFO_0000015"/>
		<skos:editorialNote>The facilitation axiom still needs some work. The embedded relation facilitates seems to be very similar to the one Barry has introduced for the IOF, named &apos;causes&apos;. Whatever name we use, it seems to be a relation that holds between two processes p, q, wherein p&apos;s temporal extent precedes or overlaps the temporal extent of q (or p&apos;s temporal extent lies entirely within q&apos;s, in which case it is likely a process part of q), but in any case, p is such that it triggers q.</skos:editorialNote>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:adaptedFrom>Eric MERRELL, David LIMBAUGH, Peter KOCH &amp; Barry SMITH, &quot;Capabilities,&quot; pre-publication paper</iof-av:adaptedFrom>
		<iof-av:semi-formalNaturalLanguageDefinition>x &apos;has Interest In&apos; y iff x is an Organism or Group of Organisms and y is a process, and:
(i) there exists some objective o that x is carrier of, and some plan &apos;i&apos; that achieves &apos;o&apos;, and the plan is such that it prescribes y (Prescription Axiom), or
(ii) there exists some downstream process p that y facilitates and in which x already has an interest (Facilitation Axiom) 
(iii) (Biological Axiom) to be added
(iv) (Permanence Axiom) to be added</iof-av:semi-formalNaturalLanguageDefinition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&iof-core;isAvailableTo">
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
		<rdfs:label>is available to</rdfs:label>
		<rdfs:domain>
			<owl:Class>
				<owl:intersectionOf rdf:parseType="Collection">
					<rdf:Description rdf:about="&roimport;BFO_0000004">
					</rdf:Description>
					<owl:Class>
						<owl:complementOf rdf:resource="&roimport;BFO_0000006"/>
					</owl:Class>
				</owl:intersectionOf>
			</owl:Class>
		</rdfs:domain>
		<rdfs:range rdf:resource="&iof-core;Agent"/>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:naturalLanguageDefinition>NL: independent continuant &apos;x&apos; is available to agent &apos;y&apos; means &apos;y&apos; has some intention &apos;i&apos; realized by some planned process &apos;p&apos; whereby either &apos;x&apos; has some disposition &apos;p&apos; realizes or, more generally, &apos;x&apos; merely participates in &apos;p&apos;. 

FOL:  isAvailableTo (x, y) → IndependentContinuant(x) ∧ Agent(y) ∧ ∃p, ∃i (PlannedProcess(p) ∧ intentionOf(i, y) ∧ realizes(p, i) ∧ (∃d (Disposition(d) ∧ bears(x, d) ∧ realizes(p, d)) ∨ participates-in(x, p)))</iof-av:naturalLanguageDefinition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&iof-core;isIntentionOf">
		<rdfs:label xml:lang="en">is intention of</rdfs:label>
		<skos:editorialNote>This needs to be reviewed.</skos:editorialNote>
		<iof-core:xMaturity>In Analysis</iof-core:xMaturity>
		<iof-av:firstOrderLogicDefinition xml:lang="en">isIntentionOf(i, x) is an agent(x) &amp; intention(i) &amp; bearer_of(x, i)</iof-av:firstOrderLogicDefinition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&iof-core;isProcessProfileOf">
		<rdfs:label>is process profile of</rdfs:label>
		<iof-core:xMaturity>Pre-analysis</iof-core:xMaturity>
		<iof-av:elucidation>b &apos;process Profile Of&apos; c holds if b is &apos;proper occurrent part of&apos; c and there exists d that is &apos;proper occurrent part&apos; of c, which has no parts in common with b, is mutually dependent on b, and is such that b, c and d occupy the same temporal region</iof-av:elucidation>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&iof-core;satisfies">
		<rdfs:label>satisfies</rdfs:label>
		<rdfs:range rdf:resource="&iof-core;Requirement"/>
		<iof-av:naturalLanguageDefinition>relation between a thing and some person or organization that holds when the thing meets the some need, desire or requirement the person has</iof-av:naturalLanguageDefinition>
	</owl:ObjectProperty>
	
	<owl:ObjectProperty rdf:about="&iof-core;specifies">
		<rdfs:label>specifies</rdfs:label>
		<rdfs:domain rdf:resource="&iof-core;Specification"/>
		<rdfs:range rdf:resource="&roimport;BFO_0000001"/>
		<owl:deprecated rdf:datatype="&xsd;boolean">true</owl:deprecated>
		<iof-av:elucidation>&apos;x&apos; specifies &apos;y&apos; means:  &apos;x&apos; is a specification and  &apos;x&apos; prescribes &apos;y&apos;</iof-av:elucidation>
		<iof-av:firstOrderLogicDefinition>specifies(x,y) → Specification(x) ∧ prescribes(x,y)</iof-av:firstOrderLogicDefinition>
	</owl:ObjectProperty>
	
	<owl:AnnotationProperty rdf:about="&iof-core;xDefinitionOtherCommon">
		<skos:editorialNote>This annotation property is used to track the source of  and other common definitions for a term that were used in deriving the natural language definition adopted by the IOF .  This property is used only during the pre-release/inbetween-releases phase of ontology development and is removed prior to each release.</skos:editorialNote>
	</owl:AnnotationProperty>
	
	<owl:AnnotationProperty rdf:about="&iof-core;xExampleComplement">
		<skos:editorialNote>This annotation property is used to document any important complement examples that were discovered or raised during the analysis phase of a term and pertaining to the natural language definition adopted by the IOF.  Complement examples are not inferrable or not included in the scope of a term&apos;s current definition and formalization, whereas ideally, one or more restrictions would be relaxed or dropped in the term&apos;s formalization to allow their inclusion.  Complement examples serve as an important input to the creation of ontology tutorials and reference guides, which at the term level,  inform users of the ontology on potential negative impacts and side-effects that a term&apos;s formalization may have on its potential use. This property is used only during the pre-release/inbetween-releases phase of ontology development and is removed prior to each release.</skos:editorialNote>
	</owl:AnnotationProperty>
	
	<owl:AnnotationProperty rdf:about="&iof-core;xExampleCounter">
		<skos:editorialNote>This annotation property is used to document any important counter examples that were discovered or raised during the analysis phase of a term and pertaining to the natural language definition adopted by the IOF.  Counter examples are inferrable or included in a term&apos;s current definition and formalization, whereas ideally, additional restrictions would have been added to the term&apos;s formalization to exclude them.  Counter examples serve as an important input to the creation of ontology tutorials and reference guides, which at the term level,  inform users of the ontology on potential negative impacts and side-effects that a term&apos;s formalization may have on its potential use. This annotation property is used ...  This property is used only during the pre-release/inbetween-releases phase of ontology development and is removed prior to each release.</skos:editorialNote>
	</owl:AnnotationProperty>
	
	<owl:AnnotationProperty rdf:about="&iof-core;xMaturity">
		<skos:editorialNote>This annotation property stores the &quot;maturity&quot; of a term (class or object property) and signifies what stage of completion a term&apos;s definitional content is in. This property is used only during the pre-release/inbetween-releases phase of ontology development and is removed prior to each release.  Allowable designations are as follows:

1) Formalized → term has been analyzed, defined and formalized according to the IOF Technical Principles Guide and the Annotation Property Rules; term has been &quot;peer-reviewed&quot; by WG members with no major issues are outstanding
2) Stable Definition → term has been analyzed and a natural language definition has been identified and adopted by WG members; term however may be lacking in further formalization and may contain terms or notions to be analyzed, defined and added to the ontology
3) In Analysis → term or notion is under analysis by the WG, or has a candidate definition that has not yet been peer-reviewed
4) Pre-analysis → a new term or notion motivated by WG discussions, or one that needs to be introduced because it is contained in the definition of another term that has been adopted; although the analysis for such a term remains to be conducted, it will usually have a candidate natural language definition originating from the context where it is used, or from some external source</skos:editorialNote>
	</owl:AnnotationProperty>
	
	<owl:Class rdf:about="&iof-core;zParkedClasses">
	</owl:Class>

</rdf:RDF>